services:
  postgres:
    image: postgres
    container_name: postgres-sql-bsn
    ports:
      - "5433:5432"  # Changed the host port to 5433, but still uses 5432 in the container
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: book_network_api
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql  # Mount the init-db.sql script here
    networks:
      - boot_social_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "root", "-d", "book_network_api" ]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s

  mail-dev:
    container_name: mail-dev-bsn
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - boot_social_network

  boot-social-network:
    image: boot-social-network
    container_name: boot-social-network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    networks:
      - boot_social_network
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/book_network_api
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_SQL_INIT_MODE: never
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: beans,loggers,metrics,health,info,readiness
      APPLICATION_SECURITY_JWT_SECRET_KEY: ${APPLICATION_SECURITY_JWT_SECRET_KEY}
      APPLICATION_SECURITY_JWT_EXPIRATION_TIME: 86400000
    volumes:
      - .:/book-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus  # Volume for Prometheus data persistence
    ports:
      - "9090:9090"  # Expose port 9090 for Prometheus
    networks:
      - boot_social_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin  # Default admin password for Grafana
    ports:
      - "3000:3000"  # Expose port 3000 for Grafana
    networks:
      - boot_social_network
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana  # Volume for Grafana data persistence

networks:
  boot_social_network:
    driver: bridge  # Create a bridge network for service communication

volumes:
  postgres:
    driver: local  # Volume for PostgreSQL persistence
  prometheus-data:
    driver: local  # Volume for Prometheus data persistence
  grafana-data:
    driver: local  # Volume for Grafana data persistence
